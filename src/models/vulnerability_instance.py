"""
Vulnerability Instance model - represents a vulnerability on a specific asset
"""
from sqlalchemy import Column, String, DateTime, Text, Integer, ForeignKey
from sqlalchemy.orm import relationship
from .base import BaseModel


class VulnerabilityInstance(BaseModel):
    """Vulnerability instance on a specific asset"""
    __tablename__ = 'vulnerability_instances'
    
    # Foreign keys
    vulnerability_id = Column(Integer, ForeignKey('vulnerabilities.id'), nullable=False)
    asset_id = Column(Integer, ForeignKey('assets.id'), nullable=False)
    
    # Network details
    port = Column(String(10))
    protocol = Column(String(10))
    
    # Temporal information
    detected_date = Column(DateTime)
    last_seen = Column(DateTime)
    
    # Status
    instance_status = Column(String(20), default="Active")  # Active, Fixed, etc.
    
    # Evidence/details
    evidence = Column(Text)
    
    # Relations
    vulnerability = relationship("Vulnerability", back_populates="instances")
    asset = relationship("Asset", back_populates="vulnerability_instances")
    
    def __repr__(self):
        return f"<VulnerabilityInstance(vuln_id={self.vulnerability_id}, asset_id={self.asset_id}, status={self.instance_status})>"
    
    @property
    def is_active(self) -> bool:
        """Check if vulnerability instance is still active"""
        return self.instance_status.lower() == "active"
    
    @property
    def network_location(self) -> str:
        """Get network location string"""
        if self.port and self.protocol:
            return f"{self.protocol}:{self.port}"
        elif self.port:
            return f"port {self.port}"
        else:
            return "N/A"